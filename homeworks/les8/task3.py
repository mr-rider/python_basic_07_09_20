"""
Task 3
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится
на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class NumberException(Exception):

    def __init__(self, text_except):
        self.text_except = text_except


if __name__ == '__main__':
    list_numbers = []

    while True:
        user_input = input('Введите число: ')
        if user_input.lower() == 'stop':
            break
        try:
            if user_input.isdigit():
                list_numbers.append(int(user_input))
            else:
                raise NumberException('Введено не число')

        except NumberException as error:
            print(error)

    print(list_numbers)



